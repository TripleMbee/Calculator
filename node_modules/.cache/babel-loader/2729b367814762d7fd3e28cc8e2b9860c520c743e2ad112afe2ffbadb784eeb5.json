{"ast":null,"code":"var _jsxFileName = \"D:\\\\kodingan\\\\kalkulator\\\\src\\\\components\\\\Stars.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stars = () => {\n  _s();\n  const [stars, setStars] = useState([]);\n  const [shootingStars, setShootingStars] = useState([]);\n  useEffect(() => {\n    // Generate regular stars\n    const generateStars = () => {\n      const newStars = [];\n      const numberOfStars = 150;\n      for (let i = 0; i < numberOfStars; i++) {\n        const size = Math.random();\n        let starClass = 'star star-small';\n        if (size > 0.7) {\n          starClass = 'star star-large';\n        } else if (size > 0.4) {\n          starClass = 'star star-medium';\n        }\n\n        // Add floating animation to some stars\n        if (Math.random() > 0.8) {\n          starClass += ' star-float';\n        }\n\n        // Add pulsing animation to some stars\n        if (Math.random() > 0.9) {\n          starClass += ' star-pulse';\n        }\n        const star = {\n          id: i,\n          x: Math.random() * 100,\n          y: Math.random() * 100,\n          class: starClass,\n          delay: Math.random() * 3,\n          duration: 2 + Math.random() * 3\n        };\n        newStars.push(star);\n      }\n      setStars(newStars);\n    };\n\n    // Generate shooting stars periodically\n    const generateShootingStar = () => {\n      const shootingStar = {\n        id: Date.now(),\n        x: Math.random() * 100,\n        y: Math.random() * 50,\n        delay: Math.random() * 2\n      };\n      setShootingStars(prev => [...prev, shootingStar]);\n\n      // Remove shooting star after animation completes\n      setTimeout(() => {\n        setShootingStars(prev => prev.filter(star => star.id !== shootingStar.id));\n      }, 6000);\n    };\n    generateStars();\n\n    // Generate shooting stars every 3-8 seconds\n    const shootingStarInterval = setInterval(() => {\n      if (Math.random() > 0.5) {\n        // 50% chance\n        generateShootingStar();\n      }\n    }, 3000 + Math.random() * 5000);\n    return () => {\n      clearInterval(shootingStarInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stars-container\",\n    children: [stars.map(star => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: star.class,\n      style: {\n        left: `${star.x}%`,\n        top: `${star.y}%`,\n        animationDelay: `${star.delay}s`,\n        animationDuration: `${star.duration}s`\n      }\n    }, star.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), shootingStars.map(star => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-shooting\",\n      style: {\n        left: `${star.x}%`,\n        top: `${star.y}%`,\n        animationDelay: `${star.delay}s`\n      }\n    }, star.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Stars, \"BocwZNC5/g6t0UYjh4LT7tNk4NI=\");\n_c = Stars;\nexport default Stars;\nvar _c;\n$RefreshReg$(_c, \"Stars\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Stars","_s","stars","setStars","shootingStars","setShootingStars","generateStars","newStars","numberOfStars","i","size","Math","random","starClass","star","id","x","y","class","delay","duration","push","generateShootingStar","shootingStar","Date","now","prev","setTimeout","filter","shootingStarInterval","setInterval","clearInterval","className","children","map","style","left","top","animationDelay","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/kodingan/kalkulator/src/components/Stars.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Stars = () => {\r\n  const [stars, setStars] = useState([]);\r\n  const [shootingStars, setShootingStars] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Generate regular stars\r\n    const generateStars = () => {\r\n      const newStars = [];\r\n      const numberOfStars = 150;\r\n\r\n      for (let i = 0; i < numberOfStars; i++) {\r\n        const size = Math.random();\r\n        let starClass = 'star star-small';\r\n        \r\n        if (size > 0.7) {\r\n          starClass = 'star star-large';\r\n        } else if (size > 0.4) {\r\n          starClass = 'star star-medium';\r\n        }\r\n\r\n        // Add floating animation to some stars\r\n        if (Math.random() > 0.8) {\r\n          starClass += ' star-float';\r\n        }\r\n\r\n        // Add pulsing animation to some stars\r\n        if (Math.random() > 0.9) {\r\n          starClass += ' star-pulse';\r\n        }\r\n\r\n        const star = {\r\n          id: i,\r\n          x: Math.random() * 100,\r\n          y: Math.random() * 100,\r\n          class: starClass,\r\n          delay: Math.random() * 3,\r\n          duration: 2 + Math.random() * 3\r\n        };\r\n\r\n        newStars.push(star);\r\n      }\r\n\r\n      setStars(newStars);\r\n    };\r\n\r\n    // Generate shooting stars periodically\r\n    const generateShootingStar = () => {\r\n      const shootingStar = {\r\n        id: Date.now(),\r\n        x: Math.random() * 100,\r\n        y: Math.random() * 50,\r\n        delay: Math.random() * 2\r\n      };\r\n\r\n      setShootingStars(prev => [...prev, shootingStar]);\r\n\r\n      // Remove shooting star after animation completes\r\n      setTimeout(() => {\r\n        setShootingStars(prev => prev.filter(star => star.id !== shootingStar.id));\r\n      }, 6000);\r\n    };\r\n\r\n    generateStars();\r\n\r\n    // Generate shooting stars every 3-8 seconds\r\n    const shootingStarInterval = setInterval(() => {\r\n      if (Math.random() > 0.5) { // 50% chance\r\n        generateShootingStar();\r\n      }\r\n    }, 3000 + Math.random() * 5000);\r\n\r\n    return () => {\r\n      clearInterval(shootingStarInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"stars-container\">\r\n      {/* Regular twinkling stars */}\r\n      {stars.map((star) => (\r\n        <div\r\n          key={star.id}\r\n          className={star.class}\r\n          style={{\r\n            left: `${star.x}%`,\r\n            top: `${star.y}%`,\r\n            animationDelay: `${star.delay}s`,\r\n            animationDuration: `${star.duration}s`\r\n          }}\r\n        />\r\n      ))}\r\n\r\n      {/* Shooting stars */}\r\n      {shootingStars.map((star) => (\r\n        <div\r\n          key={star.id}\r\n          className=\"star-shooting\"\r\n          style={{\r\n            left: `${star.x}%`,\r\n            top: `${star.y}%`,\r\n            animationDelay: `${star.delay}s`\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stars; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,aAAa,GAAG,GAAG;MAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,EAAEC,CAAC,EAAE,EAAE;QACtC,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;QAC1B,IAAIC,SAAS,GAAG,iBAAiB;QAEjC,IAAIH,IAAI,GAAG,GAAG,EAAE;UACdG,SAAS,GAAG,iBAAiB;QAC/B,CAAC,MAAM,IAAIH,IAAI,GAAG,GAAG,EAAE;UACrBG,SAAS,GAAG,kBAAkB;QAChC;;QAEA;QACA,IAAIF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;UACvBC,SAAS,IAAI,aAAa;QAC5B;;QAEA;QACA,IAAIF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;UACvBC,SAAS,IAAI,aAAa;QAC5B;QAEA,MAAMC,IAAI,GAAG;UACXC,EAAE,EAAEN,CAAC;UACLO,CAAC,EAAEL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UACtBK,CAAC,EAAEN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UACtBM,KAAK,EAAEL,SAAS;UAChBM,KAAK,EAAER,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC;UACxBQ,QAAQ,EAAE,CAAC,GAAGT,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;QAChC,CAAC;QAEDL,QAAQ,CAACc,IAAI,CAACP,IAAI,CAAC;MACrB;MAEAX,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC;;IAED;IACA,MAAMe,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMC,YAAY,GAAG;QACnBR,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC;QACdT,CAAC,EAAEL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QACtBK,CAAC,EAAEN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;QACrBO,KAAK,EAAER,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;MACzB,CAAC;MAEDP,gBAAgB,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,YAAY,CAAC,CAAC;;MAEjD;MACAI,UAAU,CAAC,MAAM;QACftB,gBAAgB,CAACqB,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACd,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKQ,YAAY,CAACR,EAAE,CAAC,CAAC;MAC5E,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAEDT,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMuB,oBAAoB,GAAGC,WAAW,CAAC,MAAM;MAC7C,IAAInB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QAAE;QACzBU,oBAAoB,CAAC,CAAC;MACxB;IACF,CAAC,EAAE,IAAI,GAAGX,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;IAE/B,OAAO,MAAM;MACXmB,aAAa,CAACF,oBAAoB,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9B,OAAA;IAAKiC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAE7B/B,KAAK,CAACgC,GAAG,CAAEpB,IAAI,iBACdf,OAAA;MAEEiC,SAAS,EAAElB,IAAI,CAACI,KAAM;MACtBiB,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGtB,IAAI,CAACE,CAAC,GAAG;QAClBqB,GAAG,EAAE,GAAGvB,IAAI,CAACG,CAAC,GAAG;QACjBqB,cAAc,EAAE,GAAGxB,IAAI,CAACK,KAAK,GAAG;QAChCoB,iBAAiB,EAAE,GAAGzB,IAAI,CAACM,QAAQ;MACrC;IAAE,GAPGN,IAAI,CAACC,EAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACF,CAAC,EAGDvC,aAAa,CAAC8B,GAAG,CAAEpB,IAAI,iBACtBf,OAAA;MAEEiC,SAAS,EAAC,eAAe;MACzBG,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGtB,IAAI,CAACE,CAAC,GAAG;QAClBqB,GAAG,EAAE,GAAGvB,IAAI,CAACG,CAAC,GAAG;QACjBqB,cAAc,EAAE,GAAGxB,IAAI,CAACK,KAAK;MAC/B;IAAE,GANGL,IAAI,CAACC,EAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA1GID,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AA4GX,eAAeA,KAAK;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}